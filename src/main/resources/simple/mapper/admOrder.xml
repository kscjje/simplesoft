<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.simplesoft.mapper.admOrder.AdmOrderMapper">

	<!-- 주문내역 정보 -->	
	<resultMap id="orderShopApplyResult" type="com.simplesoft.order.service.OrderVO">
		<id property="orderNo" column="ORDER_NO"/>
	  	<collection property="productList" column="ORDER_NO" javaType="java.util.ArrayList" ofType="com.simplesoft.order.service.OrderProductVO" select="getOrderProductInfo"/>
	</resultMap>

	<!-- 주문 신청 정보 -->	
	<select id="selectOrderApplyList" parameterType="com.simplesoft.order.service.OrderVO" resultType="com.simplesoft.order.service.OrderVO">
		/* AdmOrderMapper.selectOrderApplyList */
		SELECT 
			T.*
		FROM 
			(
				SELECT 
					  A.ORDER_NO
					, A.USER_NO
					, A.ORDER_STATUS
					, A.USER_SESSION
					, A.ORDER_PAY_TYPE
					, A.TOTAL_PRODUCT_AMT
					, A.TOTAL_DIS_AMT
					, A.TOTAL_DELY_AMT
					, A.MARKETING_AGREE_FG
					, A.ORDER_NAME
					, A.ORDER_PWD
					, A.ORDER_TEL
					, A.ORDER_PHONE
					, A.ORDER_POST_NUM
					, A.ORDER_ADDR
					, A.ORDER_ADDR_DETAIL
					, A.ORDER_EMAIL
					, A.RECEIVE_NAME
					, A.RECEIVE_TEL
					, A.RECEIVE_PHONE
					, A.RECEIVE_POST_NUM
					, A.RECEIVE_ADDR
					, A.RECEIVE_ADDR_DETAIL
					, A.COMMON_PWD
					, DATE_FORMAT(A.ORDER_PAY_DT,'%Y-%m-%d %H:%i:%s') AS ORDER_PAY_DT
					, A.BIGO
					, A.REG_USER
					, DATE_FORMAT(A.REG_DT,'%Y-%m-%d %H:%i:%s') AS REG_DT
					, IFNULL(C.PAY_METHOD,'') AS PAY_METHOD
					, IFNULL(C.ORDER_NAME,'') AS PRODUCT_NAME
					, C.TOTAL_AMOUNT
					, B.STATUS as DELIVERY_STATUS
					, CASE 
						WHEN B.STATUS = '1000' THEN '배송전' 
						WHEN B.STATUS = '0000' THEN '배송완료'
						ELSE '배송전' 
					END AS DELIVERY_STATUS_NM
					, CASE 
						WHEN A.ORDER_STATUS = '1000' THEN '주문대기'
						WHEN A.ORDER_STATUS = '1001' THEN '가상계좌 입금대기'
						WHEN A.ORDER_STATUS = '0000' THEN '주문완료'
						WHEN A.ORDER_STATUS = '0001' THEN '주문취소'
						WHEN A.ORDER_STATUS = '0002' THEN '환불요청'
						WHEN A.ORDER_STATUS = '0003' THEN '환불완료'
						ELSE '배송전' 
					END AS ORDER_STATUS_NM
					, B.MANAGER_NO
					, B.DELIVERY_DT
					, (SELECT COUNT(*) FROM ORDER_PRODUCT WHERE A.ORDER_NO = ORDER_NO) ORDER_QTY
					, (SELECT MENU_DAY FROM ORDER_PRODUCT WHERE A.ORDER_NO = ORDER_NO ORDER BY MENU_DAY ASC LIMIT 1 ) MENU_DAY
					, CASE 
						WHEN A.DELIV_KIND = '1000' THEN '당일배송(안산)'
						WHEN A.DELIV_KIND = '2000' THEN '우체국 택배(안산 외)'
					END AS DELIV_KIND
					, CASE 
						WHEN A.PACKAGING = '1000' THEN '보냉가방(신규)'
						WHEN A.PACKAGING = '2000' THEN '보냉가방(기존)'
						WHEN A.PACKAGING = '3000' THEN '종이가방'
					END AS PACKAGING
					, C.PAYMENT_KEY
					, C.CARD
					, C.EASY_PAY
					, (SELECT CANCELS FROM PAYMENTS WHERE A.ORDER_NO = ORDER_ID AND STATUS = 'CANCELED') AS CANCELS
					, D.STATUS AS REFUND_STATUS
					, D.REFUND_MSG
					, D.REFUND_ANSWER
					, DATE_FORMAT(D.REG_DT,'%Y-%m-%d %H:%i:%s') AS REFUND_REG_DT
				FROM ORDER_MST A
				LEFT JOIN DELIVERY_MST B ON A.ORDER_NO = B.ORDER_NO
				LEFT JOIN PAYMENTS C ON A.ORDER_NO = C.ORDER_ID AND C.STATUS = 'DONE'
				LEFT JOIN REFUND D ON A.ORDER_NO = D.ORDER_NO
				WHERE A.ORDER_STATUS != '1000'
				<if test="startDate neq null and startDate neq '' and endDate neq null and endDate neq ''">
					AND DATE_FORMAT(A.ORDER_PAY_DT,'%Y-%m-%d') BETWEEN #{startDate} AND #{endDate}
				</if>
				<if test="orderStatus neq null and orderStatus neq ''">
					AND A.ORDER_STATUS = ${orderStatus}
				</if>
				<if test="refundStatus neq null and refundStatus neq ''">
					AND D.STATUS = ${refundStatus}
				</if>
				<if test="searchOption neq null and searchOption neq ''">
					<if test="searchOption == 1">
						AND A.ORDER_NAME LIKE CONCAT('%',#{searchText},'%')
					</if>
					<if test="searchOption == 2">
						<if test="searchText neq null and searchText neq ''">
							AND A.ORDER_NO = #{searchText}
						</if>
					</if>
				</if>
				GROUP BY A.ORDER_NO
			) T
		ORDER BY T.REG_DT DESC
		<if test="startPage neq null and startPage neq '' and endPage neq null and endPage neq '' or startPage eq 0">
			LIMIT #{startPage}, #{endPage}
		</if>
	</select>
	<!-- 주문 신청 정보 -->	
	<select id="selectOrderApplyListCount" parameterType="com.simplesoft.order.service.OrderVO" resultType="int">
		/* AdmOrderMapper.selectOrderApplyListCount */
		SELECT 
			COUNT(*) as totalCount
		FROM 
			(
				SELECT 
					 1
				FROM ORDER_MST A
				LEFT JOIN DELIVERY_MST B ON A.ORDER_NO = B.ORDER_NO
				LEFT JOIN PAYMENTS C ON A.ORDER_NO = C.ORDER_ID AND C.STATUS = 'DONE'
				LEFT JOIN REFUND D ON A.ORDER_NO = D.ORDER_NO
				WHERE A.ORDER_STATUS != '1000'
				<if test="startDate neq null and startDate neq '' and endDate neq null and endDate neq ''">
					AND DATE_FORMAT(A.ORDER_PAY_DT,'%Y-%m-%d') BETWEEN #{startDate} AND #{endDate}
				</if>
				<if test="orderStatus neq null and orderStatus neq ''">
					AND A.ORDER_STATUS = ${orderStatus}
				</if>
				<if test="refundStatus neq null and refundStatus neq ''">
					AND D.STATUS = ${refundStatus}
				</if>
				<if test="searchOption neq null and searchOption neq ''">
					<if test="searchOption == 1">
						AND A.ORDER_NAME LIKE CONCAT('%',#{searchText},'%')
					</if>
					<if test="searchOption == 2">
						<if test="searchText neq null and searchText neq ''">
							AND A.ORDER_NO = #{searchText}
						</if>
					</if>
				</if>
				GROUP BY A.ORDER_NO
			) T
	</select>
	
	<!-- 주문 신청 정보 -->	
	<select id="selectOrderApplyExcel" parameterType="com.simplesoft.order.service.OrderVO" resultMap="orderShopApplyResult">
		/* AdmOrderMapper.selectOrderApplyExcel */
		SELECT 
			T.*
		FROM 
			(
				SELECT 
					  A.ORDER_NO
					, A.USER_NO
					, A.ORDER_STATUS
					, A.USER_SESSION
					, A.ORDER_PAY_TYPE
					, A.TOTAL_PRODUCT_AMT
					, A.TOTAL_DIS_AMT
					, A.TOTAL_DELY_AMT
					, A.MARKETING_AGREE_FG
					, A.ORDER_NAME
					, A.ORDER_PWD
					, A.ORDER_TEL
					, A.ORDER_PHONE
					, A.ORDER_POST_NUM
					, A.ORDER_ADDR
					, A.ORDER_ADDR_DETAIL
					, A.ORDER_EMAIL
					, A.RECEIVE_NAME
					, A.RECEIVE_TEL
					, A.RECEIVE_PHONE
					, A.RECEIVE_POST_NUM
					, A.RECEIVE_ADDR
					, A.RECEIVE_ADDR_DETAIL
					, A.COMMON_PWD
					, DATE_FORMAT(A.ORDER_PAY_DT,'%Y-%m-%d %H:%i:%s') AS ORDER_PAY_DT
					, A.BIGO
					, A.REG_USER
					, DATE_FORMAT(A.REG_DT,'%Y-%m-%d %H:%i:%s') AS REG_DT
					, IFNULL(C.PAY_METHOD,'') AS PAY_METHOD
					, IFNULL(C.ORDER_NAME,'') AS PRODUCT_NAME
					, C.TOTAL_AMOUNT
					, B.STATUS as DELIVERY_STATUS
					, CASE 
						WHEN B.STATUS = '1000' THEN '배송전' 
						WHEN B.STATUS = '0000' THEN '배송완료'
						ELSE '배송전' 
					END AS DELIVERY_STATUS_NM
					, CASE 
						WHEN A.ORDER_STATUS = '1000' THEN '주문대기'
						WHEN A.ORDER_STATUS = '1001' THEN '가상계좌 입금대기'
						WHEN A.ORDER_STATUS = '0000' THEN '주문완료'
						WHEN A.ORDER_STATUS = '0001' THEN '주문취소'
						WHEN A.ORDER_STATUS = '0002' THEN '환불요청'
						WHEN A.ORDER_STATUS = '0003' THEN '환불완료'
						ELSE '배송전' 
					END AS ORDER_STATUS_NM
					, B.MANAGER_NO
					, B.DELIVERY_DT
					, (SELECT COUNT(*) FROM ORDER_PRODUCT WHERE A.ORDER_NO = ORDER_NO) ORDER_QTY
					, (SELECT MENU_DAY FROM ORDER_PRODUCT WHERE A.ORDER_NO = ORDER_NO ORDER BY MENU_DAY ASC LIMIT 1 ) MENU_DAY
					, CASE 
						WHEN A.DELIV_TIME = '1000' THEN '오전배달(8~10시)' 
						WHEN A.DELIV_TIME = '2000' THEN '오후배달(1~4시)'
					END AS DELIV_TIME
					, CASE 
						WHEN A.DELIV_KIND = '1000' THEN '당일배송(안산)'
						WHEN A.DELIV_KIND = '2000' THEN '우체국 택배(안산 외)'
					END AS DELIV_KIND
					, CASE 
						WHEN A.PACKAGING = '1000' THEN '보냉가방(신규)'
						WHEN A.PACKAGING = '2000' THEN '보냉가방(기존)'
						WHEN A.PACKAGING = '3000' THEN '종이가방'
					END AS PACKAGING
					, C.PAYMENT_KEY
				FROM ORDER_MST A
				LEFT JOIN DELIVERY_MST B ON A.ORDER_NO = B.ORDER_NO
				LEFT JOIN PAYMENTS C ON A.ORDER_NO = C.ORDER_ID AND C.STATUS = 'DONE'
				LEFT JOIN REFUND D ON A.ORDER_NO = D.ORDER_NO
				WHERE A.ORDER_STATUS != '1000'
				<if test="startDate neq null and startDate neq '' and endDate neq null and endDate neq ''">
					AND DATE_FORMAT(A.ORDER_PAY_DT,'%Y-%m-%d') BETWEEN #{startDate} AND #{endDate}
				</if>
				<if test="orderStatus neq null and orderStatus neq ''">
					AND A.ORDER_STATUS = ${orderStatus}
				</if>
				<if test="refundStatus neq null and refundStatus neq ''">
					AND D.STATUS = ${refundStatus}
				</if>
				<if test="searchOption neq null and searchOption neq ''">
					<if test="searchOption == 1">
						AND A.ORDER_NAME LIKE CONCAT('%',#{searchText},'%')
					</if>
					<if test="searchOption == 2">
						<if test="searchText neq null and searchText neq ''">
							AND A.ORDER_NO = #{searchText}
						</if>
					</if>
				</if>
				GROUP BY A.ORDER_NO
			) T
		ORDER BY T.REG_DT DESC
	</select>
	
	<!-- 주문 신청 정보 -->	
	<select id="getOrderProductInfo" parameterType="com.simplesoft.order.service.OrderProductVO" resultType="com.simplesoft.order.service.OrderProductVO">
		/* AdmOrderMapper.getOrderProductInfo */
		SELECT
			  ORDER_PRODUCT_NO
			, ORDER_NO
			, ORDER_QTY
			, MENU_BOARD_SEQ
			, MENU_DAY
			, MENU_MSG
			, PAY_AMT
			, MENU_MSG_DETAIL
			, ORDER_SET
			, CASE 
				WHEN ORDER_SET = '1000' THEN '일반세트(추가)' 
				WHEN ORDER_SET = '2000' THEN '1인분세트'
				WHEN ORDER_SET = '3000' THEN '일반세트'
			END AS ORDER_SET_NM
			, CASE 
				WHEN DELIV_TIME = '1000' THEN '오전배달(8~10시)' 
				WHEN DELIV_TIME = '2000' THEN '오후배달(1~4시)'
			END AS DELIV_TIME
			, DELIVERY_TYPE
			, USED_POINT
			, CONFIRM_DT
			, REG_USER
			, DATE_FORMAT(REG_DT,'%Y-%m-%d %H:%i:%s') AS REG_DT
		FROM ORDER_PRODUCT
		WHERE ORDER_NO = #{orderNo}
	</select>
	
	<!-- 대시보드 건수 정보 -->	
	<select id="getDashBoardCnt" resultType="CamelHashMap">
		/*AdmOrderMapper.getDashBoardCnt*/
		SELECT
			  COUNT(CASE WHEN DATE_FORMAT(A.ORDER_PAY_DT, '%Y%m%d') = DATE_FORMAT(NOW(), '%Y%m%d') AND A.ORDER_STATUS = '0000' THEN 1 END) AS NEW_ORDER_CNT
			, COUNT(CASE WHEN A.ORDER_STATUS = '1001' THEN 1 END) AS PAY_WAIT_CNT
	    	,(SELECT COUNT(*) FROM ORDER_MST A
	    		WHERE A.ORDER_STATUS = '0000'
	    		AND EXISTS (
	    					SELECT 1 FROM DELIVERY_MST B 
	    					WHERE A.ORDER_NO = B.ORDER_NO
	    					AND B.STATUS = '1000'
	    					AND DATE_FORMAT(B.MENU_DAY, '%Y%m%d') = DATE_FORMAT(NOW(), '%Y%m%d'))) AS TODAY_DELIV_CNT
	    	,(SELECT COUNT(*) FROM ORDER_MST A
	    		WHERE A.ORDER_STATUS = '0000'
	    		AND EXISTS (
	    					SELECT 1 FROM DELIVERY_MST B
	    					WHERE A.ORDER_NO = B.ORDER_NO
	    					AND B.STATUS = '1000'
	    					AND DATE_FORMAT(B.MENU_DAY, '%Y-%m-%d') = DATE_ADD(DATE_FORMAT(NOW(), '%Y%m%d'), INTERVAL 1 DAY))) AS NEXT_DELIV_CNT
	    	,(SELECT COUNT(*) FROM ORDER_MST A JOIN REFUND B ON A.ORDER_NO = B.ORDER_NO WHERE B.STATUS = '0000') AS REFUND_CNT
	    	,(SELECT COUNT(*) FROM ORDER_MST A JOIN REFUND B ON A.ORDER_NO = B.ORDER_NO WHERE B.STATUS = '2001') AS REFUND_SUC_CNT
	    FROM ORDER_MST A
    </select>
    
	<!-- 배송 정보 -->	
	<select id="selectDeliveryList" parameterType="com.simplesoft.order.service.DeliveryVO" resultType="com.simplesoft.order.service.DeliveryVO">
		/* AdmOrderMapper.selectDeliveryList */
		SELECT
			  C.DELIVERY_SEQ
			, C.ORDER_NO
			, C.ORDER_PRODUCT_NO
			, DATE_FORMAT(C.MENU_DAY,'%Y년 %m월 %d일') AS MENU_DAY
			, C.STATUS as DELIVERY_STATUS
			, CASE 
				WHEN C.STATUS = '1000' THEN '배송전' 
				WHEN C.STATUS = '0000' THEN '배송완료'
				ELSE '배송전' 
			END AS DELIVERY_STATUS_NM
			, IFNULL((SELECT MANAGER_NM FROM MANAGER_MST MM WHERE MM.MANAGER_NO = C.MANAGER_NO),'미배정') AS MANAGER_NM
			, IFNULL(DATE_FORMAT(C.DELIVERY_DT,'%Y-%m-%d %H:%i:%s'),'') AS DELIVERY_DT
			, IFNULL(C.RECEIVE_NAME,'') AS RECEIVE_NAME
			, IFNULL(C.RECEIVE_TEL,'') AS RECEIVE_TEL
			, IFNULL(C.RECEIVE_PHONE,'') AS RECEIVE_PHONE
			, IFNULL(C.RECEIVE_POST_NUM,'') AS RECEIVE_POST_NUM 
			, IFNULL(C.RECEIVE_ADDR,'') AS RECEIVE_ADDR 
			, IFNULL(C.RECEIVE_ADDR_DETAIL,'') AS RECEIVE_ADDR_DETAIL
			, DATE_FORMAT(C.REG_DT,'%Y-%m-%d %H:%i:%s') AS REG_DT
			, B.ORDER_QTY
			, CASE 
				WHEN B.ORDER_SET = '1000' THEN CONCAT('총:',B.ORDER_QTY,'개\n|',B.MENU_MSG_DETAIL)
				ELSE CONCAT(B.ORDER_QTY,'개')
			END AS ORDER_QTY_EXCEL
			, CASE 
				WHEN B.DELIV_TIME = '1000' THEN '오전배달(8~10시)' 
				WHEN B.DELIV_TIME = '2000' THEN '오후배달(1~4시)'
				ELSE ''
			END AS DELIV_TIME
			, CASE 
				WHEN A.DELIV_KIND = '1000' THEN '당일배송(안산)'
				WHEN A.DELIV_KIND = '2000' THEN '우체국 택배(안산 외)'
			END AS DELIV_KIND
			, CASE 
				WHEN A.PACKAGING = '1000' THEN '보냉가방(신규)'
				WHEN A.PACKAGING = '2000' THEN '보냉가방(기존)'
				WHEN A.PACKAGING = '3000' THEN '종이가방'
			END AS PACKAGING
			, A.COMMON_PWD
			, B.ORDER_SET
			, CASE 
				WHEN B.ORDER_SET = '1000' THEN '일반세트(추가)' 
				WHEN B.ORDER_SET = '2000' THEN '1인분세트'
				WHEN B.ORDER_SET = '3000' THEN '일반세트'
			END AS ORDER_SET_NM
			, A.BIGO
		FROM ORDER_MST A
		INNER JOIN ORDER_PRODUCT B ON A.ORDER_NO = B.ORDER_NO 
		INNER JOIN DELIVERY_MST C ON A.ORDER_NO = C.ORDER_NO AND B.ORDER_PRODUCT_NO = C.ORDER_PRODUCT_NO
		
		WHERE 1=1
		AND A.ORDER_STATUS = '0000'
		<if test="startDate neq null and startDate neq '' and endDate neq null and endDate neq ''">
			AND DATE_FORMAT(C.MENU_DAY,'%Y%m%d') BETWEEN #{startDate} AND #{endDate}
		</if>
		<if test="delivStatus neq null and delivStatus neq ''">
			AND C.STATUS = ${delivStatus}
		</if>
		<if test="delivTime neq null and delivTime neq ''">
			AND B.DELIV_TIME = ${delivTime}
		</if>
		<if test="managerNo neq null and managerNo neq ''">
			AND C.MANAGER_NO = ${managerNo}
		</if>
		<if test="searchOption neq null and searchOption neq ''">
			<if test="searchOption == 1">
				AND C.RECEIVE_NAME LIKE CONCAT('%',#{searchText},'%')
			</if>
			<if test="searchOption == 2">
				<if test="searchText neq null and searchText neq ''">
					AND C.ORDER_NO = #{searchText}
				</if>
			</if>
		</if>
		ORDER BY
		<choose>
			<when test="searchOrder neq null and searchOrder neq ''">
				<if test="searchOrder == 1">
					C.MENU_DAY
				</if>
				<if test="searchOrder == 2">
					C.REG_DT					
				</if>
			</when>
			<otherwise>
				C.MENU_DAY
			</otherwise>
		</choose>
		<if test="searchOrderBy neq null and searchOrderBy neq ''">
			<if test="searchOrderBy == 1">
				DESC
			</if>
			<if test="searchOrderBy == 2">
				ASC
			</if>
		</if>
		<if test="startPage neq null and startPage neq '' and endPage neq null and endPage neq '' or startPage eq 0">
			LIMIT #{startPage}, #{endPage}
		</if>
	</select>
	
	<!-- 배송 정보 -->	
	<select id="selectDeliveryExcel" parameterType="com.simplesoft.order.service.DeliveryVO" resultType="com.simplesoft.order.service.DeliveryVO">
		/* AdmOrderMapper.selectDeliveryExcel */
		SELECT
			  C.DELIVERY_SEQ
			, C.ORDER_NO
			, C.ORDER_PRODUCT_NO
			, DATE_FORMAT(C.MENU_DAY,'%Y년 %m월 %d일') AS MENU_DAY
			, C.STATUS as DELIVERY_STATUS
			, CASE 
				WHEN C.STATUS = '1000' THEN '배송전' 
				WHEN C.STATUS = '0000' THEN '배송완료'
				ELSE '배송전' 
			END AS DELIVERY_STATUS_NM
			, IFNULL((SELECT MANAGER_NM FROM MANAGER_MST MM WHERE MM.MANAGER_NO = C.MANAGER_NO),'미배정') AS MANAGER_NM
			, IFNULL(DATE_FORMAT(C.DELIVERY_DT,'%Y-%m-%d %H:%i:%s'),'') AS DELIVERY_DT
			, IFNULL(C.RECEIVE_NAME,'') AS RECEIVE_NAME
			, IFNULL(C.RECEIVE_TEL,'') AS RECEIVE_TEL
			, IFNULL(C.RECEIVE_PHONE,'') AS RECEIVE_PHONE
			, IFNULL(C.RECEIVE_POST_NUM,'') AS RECEIVE_POST_NUM 
			, IFNULL(C.RECEIVE_ADDR,'') AS RECEIVE_ADDR 
			, IFNULL(C.RECEIVE_ADDR_DETAIL,'') AS RECEIVE_ADDR_DETAIL
			, DATE_FORMAT(C.REG_DT,'%Y-%m-%d %H:%i:%s') AS REG_DT
			, B.ORDER_QTY
			, CASE 
				WHEN B.ORDER_SET = '1000' THEN CONCAT('총:',B.ORDER_QTY,'개\n|',B.MENU_MSG_DETAIL)
				ELSE CONCAT(B.ORDER_QTY,'개')
			END AS ORDER_QTY_EXCEL
			, CASE 
				WHEN B.DELIV_TIME = '1000' THEN '오전배달(8~10시)' 
				WHEN B.DELIV_TIME = '2000' THEN '오후배달(1~4시)'
			END AS DELIV_TIME
			, CASE 
				WHEN A.DELIV_KIND = '1000' THEN '당일배송(안산)'
				WHEN A.DELIV_KIND = '2000' THEN '우체국 택배(안산 외)'
			END AS DELIV_KIND
			, CASE 
				WHEN A.PACKAGING = '1000' THEN '보냉가방(신규)'
				WHEN A.PACKAGING = '2000' THEN '보냉가방(기존)'
				WHEN A.PACKAGING = '3000' THEN '종이가방'
			END AS PACKAGING
			, A.COMMON_PWD
			, B.ORDER_SET
			, CASE 
				WHEN B.ORDER_SET = '1000' THEN '일반세트(추가)' 
				WHEN B.ORDER_SET = '2000' THEN '1인분세트'
				WHEN B.ORDER_SET = '3000' THEN '일반세트'
			END AS ORDER_SET_NM
			, A.BIGO
		FROM ORDER_MST A
		INNER JOIN ORDER_PRODUCT B ON A.ORDER_NO = B.ORDER_NO 
		INNER JOIN DELIVERY_MST C ON A.ORDER_NO = C.ORDER_NO AND B.ORDER_PRODUCT_NO = C.ORDER_PRODUCT_NO
		
		WHERE 1=1
		AND A.ORDER_STATUS = '0000'
		<if test="startDate neq null and startDate neq '' and endDate neq null and endDate neq ''">
			AND DATE_FORMAT(C.MENU_DAY,'%Y%m%d') BETWEEN #{startDate} AND #{endDate}
		</if>
		<if test="delivStatus neq null and delivStatus neq ''">
			AND C.STATUS = ${delivStatus}
		</if>
		<if test="delivTime neq null and delivTime neq ''">
			AND B.DELIV_TIME = ${delivTime}
		</if>
		<if test="managerNo neq null and managerNo neq ''">
			AND C.MANAGER_NO = ${managerNo}
		</if>
		<if test="searchOption neq null and searchOption neq ''">
			<if test="searchOption == 1">
				AND C.RECEIVE_NAME LIKE CONCAT('%',#{searchText},'%')
			</if>
			<if test="searchOption == 2">
				<if test="searchText neq null and searchText neq ''">
					AND C.ORDER_NO = #{searchText}
				</if>
			</if>
		</if>
		ORDER BY
		<choose>
			<when test="searchOrder neq null and searchOrder neq ''">
				<if test="searchOrder == 1">
					C.MENU_DAY
				</if>
				<if test="searchOrder == 2">
					C.REG_DT					
				</if>
			</when>
			<otherwise>
				C.MENU_DAY
			</otherwise>
		</choose>
		<if test="searchOrderBy neq null and searchOrderBy neq ''">
			<if test="searchOrderBy == 1">
				DESC
			</if>
			<if test="searchOrderBy == 2">
				ASC
			</if>
		</if>
	</select>
	
	<!-- 배송 정보 카운트-->	
	<select id="selectDeliveryListCount" parameterType="com.simplesoft.order.service.DeliveryVO" resultType="int">
		/* AdmOrderMapper.selectDeliveryListCount */
		SELECT
			COUNT(*) as totalCount
		FROM ORDER_MST A
		INNER JOIN ORDER_PRODUCT B ON A.ORDER_NO = B.ORDER_NO 
		INNER JOIN DELIVERY_MST C ON A.ORDER_NO = C.ORDER_NO AND B.ORDER_PRODUCT_NO = C.ORDER_PRODUCT_NO
		WHERE 1=1
		AND A.ORDER_STATUS = '0000'
		<if test="startDate neq null and startDate neq '' and endDate neq null and endDate neq ''">
			AND DATE_FORMAT(C.MENU_DAY,'%Y%m%d') BETWEEN #{startDate} AND #{endDate}
		</if>
		<if test="delivStatus neq null and delivStatus neq ''">
			AND C.STATUS = ${delivStatus}
		</if>
		<if test="delivTime neq null and delivTime neq ''">
			AND B.DELIV_TIME = ${delivTime}
		</if>
		<if test="managerNo neq null and managerNo neq ''">
			AND C.MANAGER_NO = ${managerNo}
		</if>
		<if test="searchOption neq null and searchOption neq ''">
			<if test="searchOption == 1">
				AND C.RECEIVE_NAME LIKE CONCAT('%',#{searchText},'%')
			</if>
			<if test="searchOption == 2">
				<if test="searchText neq null and searchText neq ''">
					AND C.ORDER_NO = #{searchText}
				</if>
			</if>
		</if>
	</select>
	
	<!-- 배송 정보 카운트-->	
	<select id="selectDeliveryDuple" parameterType="com.simplesoft.order.service.DeliveryVO" resultType="CamelHashMap">
		/* AdmOrderMapper.selectDeliveryDuple */
		SELECT
			A.STATUS
		FROM DELIVERY_MST A
		WHERE 1=1
		AND DELIVERY_SEQ IN
		<foreach collection="arrSeq" item="item" index="index" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</select>
	
	<!-- 배송 완료 처리 -->
	<update id="updateDelivComplete" parameterType="hashMap">
		/* AdmOrderMapper.updateDelivComplete */
		UPDATE DELIVERY_MST 
		SET STATUS = '0000', DELIVERY_DT = NOW()
		WHERE DELIVERY_SEQ IN
		<foreach collection="arrSeq" item="item" index="index" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</update>
	
	<!-- 담당자 배정 -->
	<update id="updateDelivManage" parameterType="hashMap">
		/* AdmOrderMapper.updateDelivManage */
		UPDATE DELIVERY_MST 
		SET MANAGER_NO = #{managerNo}
		WHERE DELIVERY_SEQ IN
		<foreach collection="arrSeq" item="item" index="index" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</update>
	
	<!-- 미배송 건수 -->	
	<select id="selectDeliveryNoneList" parameterType="com.simplesoft.order.service.DeliveryVO" resultType="CamelHashMap">
		/* AdmOrderMapper.selectDeliveryNoneList */
		SELECT
			  A.DELIVERY_SEQ
			, A.ORDER_NO
			, A.ORDER_PRODUCT_NO
			, DATE_FORMAT(A.MENU_DAY,'%Y년 %m월 %d일') AS MENU_DAY
			, A.RECEIVE_NAME
			, CONCAT('(',A.RECEIVE_POST_NUM,') ',A.RECEIVE_ADDR) ADDR
			, IFNULL((SELECT MANAGER_NM FROM MANAGER_MST WHERE A.MANAGER_NO = MANAGER_NO),'미배정') MANAGER_NM  
		FROM DELIVERY_MST A
		JOIN ORDER_MST B ON A.ORDER_NO = B.ORDER_NO 
		WHERE 1=1
		AND B.ORDER_STATUS = '0000'
		AND A.STATUS = '1000'
		<if test="startDate neq null and startDate neq '' and endDate neq null and endDate neq ''">
			AND DATE_FORMAT(A.MENU_DAY,'%Y%m%d') BETWEEN #{startDate} AND #{endDate}
		</if>
		ORDER BY A.MENU_DAY DESC, A.MANAGER_NO
	</select>
	
	<!-- 주문 취소 -->
	<update id="updateOrderCancel" parameterType="hashMap">
		/* AdmOrderMapper.updateOrderCancel */
		UPDATE ORDER_MST 
		SET ORDER_STATUS = '0001'
		, UPT_USER = 'admin'
		, UPT_DT = NOW()
		WHERE ORDER_NO = #{orderNo}
	</update>
</mapper>